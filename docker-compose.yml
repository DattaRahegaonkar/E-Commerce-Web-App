
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    networks:
      - ecommerce-network
    volumes:
      - ecommerce-volume:/data/db
    restart: unless-stopped
    env_file:
      - ./database/.env
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: dattarahegaonkar09/ecommerce-backend-k8s:latest
    # build:
    #   context: ./Backend
    #   dockerfile: Dockerfile
    container_name: backend
    networks:
      - ecommerce-network
    restart: unless-stopped
    env_file:
      - ./Backend/.env
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"] # Adjust the endpoint as necessary
      interval: 30s
      timeout: 10s
      retries: 5
    
  frontend:
    image: dattarahegaonkar09/ecommerce-frontend-k8s:latest
    # build:
    #   context: ./Frontend
    #   dockerfile: Dockerfile
    container_name: frontend
    networks:
      - ecommerce-network
    restart: unless-stopped
    env_file:
      - ./Frontend/.env
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"] # Adjust the endpoint as necessary
      interval: 30s
      timeout: 10s
      retries: 5


  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    networks:
      - ecommerce-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    depends_on:
      - frontend
      - backend


networks:
  ecommerce-network:
    external: true

volumes:
  ecommerce-volume:
